{"version":3,"sources":["../node_modules/eth-provider/parse/index.js","../node_modules/eth-provider/connections/http.js","../node_modules/eth-provider/node_modules/uuid/v4.js","../node_modules/eth-provider/node_modules/uuid/lib/rng-browser.js","../node_modules/eth-provider/node_modules/uuid/lib/bytesToUuid.js","../../src/index.ts","../node_modules/eth-provider/browser.js","../node_modules/eth-provider/resolve/index.js","../node_modules/eth-provider/provider/index.js","../node_modules/ethereum-provider/index.js","../node_modules/eth-provider/ConnectionManager/index.js","../node_modules/eth-provider/presets/index.js","../node_modules/eth-provider/connections/injected.js","../node_modules/eth-provider/connections/unavailable.js","../node_modules/eth-provider/connections/ws.js"],"names":["last","timeout","module","exports","res","cb","values","replace","split","forEach","data","result","JSON","parse","e","clearTimeout","setTimeout","Error","push","XHR","EventEmitter","require","uuid","HTTPConnection","_XHR","url","options","connected","subscriptions","status","pollId","create","this","emit","on","close","init","send","jsonrpc","method","params","id","err","response","pollSubscriptions","subscriptionTimeout","closed","map","p","filter","n","removeAllListeners","error","statusText","message","payload","code","internal","xhr","responded","abort","load","open","setRequestHeader","onerror","ontimeout","onreadystatechange","readyState","responseText","stringify","rng","bytesToUuid","buf","offset","i","Array","rnds","random","ii","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","r","Math","byteToHex","toString","substr","bth","join","UserRejectedRequestError","FrameConnector","kwargs","handleNetworkChanged","provider","chainId","networkId","handleChainChanged","handleAccountsChanged","account","accounts","handleClose","ethProvider","deactivate","AbstractConnector","supportedChainIds","emitUpdate","ConnectorEvent","emitError","emitDeactivate","resolve","presets","injected","ethereum","web3","currentProvider","ws","WebSocket","XMLHttpRequest","__isProvider","connections","ipc","http","targets","getProtocol","location","endsWith","startsWith","concat","type","protocol","console","log","EthereumProvider","ConnectionManager","monitor","update","check","inSetup","t","indexOf","setMaxListeners","connection","nextId","promises","checkConnection","reject","subscription","event","listener","attemptedNetworkSubscription","startNetworkSubscription","attemptedAccountsSubscription","startAccountsSubscription","_send","listenerCount","subscribe","networkChanged","netId","warn","accountsChanged","Promise","then","length","coinbase","catch","promise","requests","all","success","_id","sendAsyncBatch","_sendBatch","results","entry","index","dev","process","interval","name","connect","connectionError","summary","closing","refresh","target","connectTimer","frame","direct","infura","infuraRopsten","infuraRinkeby","infuraKovan","InjectedConnection","_injected","UnavailableConnection","WebSocketConnection","_WebSocket","socket","addEventListener","payloads","isArray","onClose","CONNECTING","_"],"mappings":"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","file":"static/js/9.c55fd8e3.chunk.js","sourcesContent":["let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n"],"sourceRoot":""}