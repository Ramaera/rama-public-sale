{"version":3,"sources":["config/index.js","components/Header.js","config/currencies.js","pages/Home/style/Style.js","pages/Home/index.js","pages/Events/index.js","pages/ReferralDetails/index.js","BlockchainProvider/index.js","App.js","reportWebVitals.js","index.js"],"names":["CHAINID","TOTAL_ROI","ANNUAL_ROI","STAKING_ADDRESS","RPC","PRICE","COINPAYMENT_SERVER","Header","wallet","useWallet","useState","connect","style","position","width","top","height","zIndex","background","className","display","flexFlow","margin","href","src","alt","window","screen","listStyle","textAlign","color","padding","cursor","float","onClick","account","substring","length","getAddress","id","name","symbol","coinpaymentId","price","Text","styled","p","Heading","h2","Flex","div","Grid","Flex1","OneCurrencyButton","currency","isSelected","onSelect","StakePopUp","props","currencies","setCurrencies","mode","setMode","isLoading","setLoading","selectedCurrency","setSelectedCurrency","ramaAmount","setRamaAmount","inputCurrencyAmount","setInputCurrencyAmount","walletAddress","setWalletAddress","ramaCoin","config","useEffect","currencyAmountInUSD","loadCurrencyData","a","axios","get","prices","data","_currencies","rawCurrencies","rawCurrency","ethereum","usd","tron","bitcoin","binancecoin","litecoin","push","console","log","handleStakeNow","payload","post","resp","location","checkout_url","error","show","type","onPopupClose","class","map","item","c","min","value","onChange","n","target","placeholder","required","disabled","Web3","utils","isAddress","alert","validate","Table","responsive","toFixed","moment","add","format","textDecoration","role","Home","showPopUp","setShowPopUp","depositData","setDepositData","totalStakedAmount","setTotalStakedAmount","pendingReward","setPendingReward","stakingContract","setStakingContract","loadData","setInterval","contract","eth","Contract","StakingABI","methods","getDepositLength","call","totalDepositLength","MAX_LOCK_TIME","maxLockTime","deposits","totalDeposit","totalReward","i","stakingInfo","deposit","getPendingReward","_pendingReward","amount","fromWei","Number","timestamp","expireTimestamp","readableTime","isWithdrawn","handleWithdraw","toast","withdraw","send","from","alignItems","justifyContent","maxWidth","colSpan","e","unix","Date","now","Events","ReferralDetails","refData","setRefData","contracts","tokenContract","loadBalance","mlmContract","loadMLMData","balanceOf","getPastEvents","fromBlock","toBlock","events","refEvent","event","returnValues","referral","then","balance","onclick","minHeight","striped","scope","walletAddr","rows","slice","renderRefTable","BlockchainProvider","setWeb3","setTokenContract","setMlmContract","setExchangeContract","initContractData","_web3","givenProvider","_tokenContract","TOKEN_ABI","TOKEN_ADDRESS","_exchangeContract","EXCHANGE_ABI","EXCHANGE","_mlmContract","MLM_ABI","MLM_ADDRESS","onContractsLoaded","exchangeContract","App","setContracts","refLink","URLSearchParams","search","localStorage","setItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","chainId","document","getElementById"],"mappings":"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","file":"static/js/main.bcf120be.chunk.js","sourcesContent":["export default {\n//     CHAINID:56,\n//     TOKEN_ADDRESS:\"0x421b9b6Ee30b17EC9D55BbBfFc1c9cD3cfD0c2f2\",\n//     MLM_ADDRESS:\"0x1D85B616C71587130068CEFB9aBE1E2f92F41B46\",\n//     DEFAULT_REF:\"0xFEFAc8Bc374460aca94A25E0A2E101B33b5B8e08\",\n//     BUSD:\"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n//     EXCHANGE:\"0xfEaf5c663585f77E04e51eEe0c9A8cA74C74b884\",\n//     HALF_YEAR_APY: 10,\n\n// // \n\n\n\n\n\n    CHAINID:1370,\n    TOTAL_ROI: 36,\n    ANNUAL_ROI: 18,\n    STAKING_ADDRESS:\"0xE8E4C68aa2De7E3462a48ADF06bc13d16407072D\",\n    RPC:\"https://blockchain.ramestta.com\",\n    PRICE: 0.12,\n    COINPAYMENT_SERVER:\"https://presale.ramaera.tk\"\n}","\nimport { useState } from \"react\";\nimport { useWallet } from \"use-wallet\";\n\n\nconst Header = ()=>{\n\n    const wallet = useWallet();\n\n    useState(()=>{\n      wallet.connect()\n    },[])\n    const getAddress = (wallet)=>{\n      return `${wallet.substring(0, 4)}....${wallet.substring(wallet.length - 4)}`\n\n    }\n\n    return     <div\n    style={{\n      position: \"relative\",\n      width: \"100%\",\n      top: 0,\n      height: \"80px\",\n      zIndex: 9999,\n      background: \"black\",\n    }}\n  >\n    <div\n      className=\"main-content\"\n      style={{ display: \"flex\", flexFlow: \"row no-wrap\", width: \"100%\" }}\n    >\n      <div\n        className=\" logo\"\n        style={{ width: \"33%\", margin: \"auto\", display: \"block\" }}\n      >\n        <a href=\"#\">\n          <img\n            src=\"../logo.png\"\n            alt=\"\"\n            style={{ width: \"50px\", margin: \"auto\", display: \"block\" }}\n          />\n        </a>\n      </div>\n      {window.screen.width > 900 && (\n        <div style={{ width: \"33%\", margin: \"auto\", display: \"block\" }}>\n          <ul style={{ listStyle: \"none\", textAlign: \"center\" }}>\n            <li\n              style={{\n                color: \"#fff\",\n                display: \"inline-block\",\n                padding: \"20px\",\n                cursor: \"pointer\",\n              }}\n            >\n              <a href=\"http://ramestta.com/\" className=\"text-white cursor-pointer\">\n                Home\n              </a>\n            </li>\n            <li\n              style={{\n                color: \"#fff\",\n                display: \"inline-block\",\n                padding: \"20px\",\n              }}\n            >\n              <a href=\"/\" className=\"text-white cursor-pointer\">Staking</a>\n            </li>\n            {/* <li\n              style={{\n                color: \"#fff\",\n                display: \"inline-block\",\n                padding: \"20px\",\n              }}\n            >\n              <a href=\"https://exchange.ramestta.com\" className=\"text-white cursor-pointer\">\n                Buy RAMA\n              </a>\n            </li> */}\n          </ul>\n        </div>\n      )}\n\n      <div\n        className=\"\"\n        style={{\n          float: \"right\",\n          width: \"33%\",\n          margin: \"auto\",\n          display: \"block\",\n        }}\n      >\n        <div className=\"header-button flex\" style={{ padding: \"12px\" }}>\n          {/* <div className=\"primary-btn\"><span id=\"address\">\n            Your Wallet Address</span>\n          </div> */}\n          <div\n            className=\"secondary-btn\"\n            onClick={() => {\n              wallet.connect();\n            }}\n          >\n            {wallet.account ? getAddress(wallet.account) : \"Connect\"}\n          </div>\n       \n       \n \n      \n      \n        </div>\n\n\n        \n      </div>\n    </div>\n  </div>\n}\n\n\nexport default Header","export default [\n    {\n        id:\"btc\",\n        name: \"Bitcoin\",\n        symbol: \"BTC\",\n        coinpaymentId:\"BTC\"\n    \n    },\n\n    {\n        id:\"eth\",\n        name: \"Ethereum\",\n        symbol: \"ETH\",\n        coinpaymentId:\"ETH\"\n\n    },\n\n\n    {\n        id:\"bnb\",\n\n        name: \"Binance Coin\",\n        symbol: \"BNB\",\n        coinpaymentId:\"BNB.BSC\"\n\n    },\n\n    {\n        id:\"trx\",\n        name: \"Tron\",\n        symbol: \"TRX\",\n        coinpaymentId:\"TRX\"\n\n    },\n    \n    {\n        id:\"busd\",\n        name: \"Binance USD\",\n\n        symbol: \"BUSD\",\n        price: 1,\n        coinpaymentId:\"BUSD.BEP20\"\n\n\n    },\n\n    {\n        id:\"ltc\",\n\n        name: \"Litcoin\",\n        symbol: \"LTC\",\n        coinpaymentId:\"LTC\"\n\n    },\n    {\n        id:\"usdt-erc20\",\n        name: \"USDT\",\n        symbol: \"USDT\",\n        price: 1,\n        coinpaymentId:\"USDT.ERC20\"\n\n\n    },\n    {\n        id:\"usdt-trc20\",\n\n        name: \"USDT\",\n        symbol: \"USDT\",\n        price: 1,\n        coinpaymentId:\"USDT.TRC20\"\n\n        \n\n    },\n    {\n        id:\"usdt-bep20\",\n\n        name: \"USDT\",\n        symbol: \"USDC\",\n        price: 1,\n        coinpaymentId:\"USDT.BEP20\"\n\n    },\n\n   \n   \n\n]","import styled from \"styled-components\";\n\nexport const Text = styled.p`\n    color: rgb(0, 0, 0);\n    font-weight: 700;\n    text-align: center;\n`\nexport const Heading = styled.h2`\n    color: rgb(130, 72, 229);\n    font-weight: bold;\n    font-size: 22px;\n    text-align: center;\n`\nexport const Flex = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n   // justify-content: space-between;\n    width: 100%;\n    min-height: 576px;\n    padding: 2rem 0;\n`\nexport const Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(47%, 1fr));\n    grid-gap: 2rem 0.5rem;\n   width: 100%;\n   \n`\nexport const Flex1 = styled.div`\n    display: flex;\n   // flex-direction: columm;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    margin: 2rem  0 0 0;\n`","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"use-wallet\";\n\nimport config from \"../../config\";\nimport moment from \"moment\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport web3 from \"web3\";\nimport Header from \"../../components/Header\"\nimport { Table } from 'reactstrap';\nimport rawCurrencies from \"../../config/currencies\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\nimport Coinpayments from 'coinpayments';\nimport StakingABI from \"../../config/ABI/StakingABI.json\"\nimport { Text, Heading, Flex, Grid, Flex1 } from \"./style/Style\";\n\n\nconst OneCurrencyButton = ({ currency, isSelected, onSelect }) => {\n\n\n  return <div\n    onClick={() => {\n      if (onSelect) {\n        onSelect(currency)\n\n      }\n    }}\n    style={{\n      width: \"100% !important\",\n      background: isSelected ? \"#2a223761\" : \"white\",\n\n    }} className={`  hoverable text-xs inline-flex items-center font-bold leading-sm uppercase px-3 py-1 rounded-full  text-gray-700 border w-full w-10`}\n  >\n    <img src={`/coins/${currency.id}.png`}\n      className=\" mr-2\"\n\n      height={30} width={30} />\n\n\n    <p className={isSelected ? \"text-white\" : \"text-gray-700 \"}>\n      {currency.symbol}\n    </p>\n\n\n  </div>\n\n}\n\nconst StakePopUp = (props) => {\n\n  const [currencies, setCurrencies] = useState([])\n  const [mode, setMode] = useState(0)\n  const [isLoading, setLoading] = useState(false)\n  const [selectedCurrency, setSelectedCurrency] = useState()\n  const [ramaAmount, setRamaAmount] = useState(0)\n  const [inputCurrencyAmount, setInputCurrencyAmount] = useState(0)\n  const [walletAddress, setWalletAddress] = useState(\"\")\n  const ramaCoin = {\n    id: \"rama\",\n    name: \"Ramessta\",\n    symbol: \"RAMA\",\n    price: config.PRICE\n  }\n\n\n  useEffect(() => {\n    if (selectedCurrency) {\n      const currencyAmountInUSD = selectedCurrency.price * inputCurrencyAmount;\n      const usdtToRama = currencyAmountInUSD / config.PRICE\n      setRamaAmount(usdtToRama)\n    }\n  }, [selectedCurrency, inputCurrencyAmount])\n  const loadCurrencyData = async () => {\n    let prices = await axios.get(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctron%2Cbinancecoin%2Clitecoin&vs_currencies=usd\")\n    prices = prices.data;\n\n    const _currencies = [];\n\n    for (let rawCurrency of rawCurrencies) {\n      let price = rawCurrency.price;\n      if (rawCurrency.id === \"eth\") {\n        price = prices.ethereum.usd\n      } else if (rawCurrency.id === \"trx\") {\n        price = prices.tron.usd\n      } else if (rawCurrency.id === \"btc\") {\n        price = prices.bitcoin.usd\n      } else if (rawCurrency.id === \"bnb\") {\n        price = prices.binancecoin.usd\n      } else if (rawCurrency.id === \"ltc\") {\n        price = prices.litecoin.usd\n      }\n\n\n      _currencies.push({ ...rawCurrency, price })\n\n    }\n\n    console.log({ _currencies })\n    setCurrencies(_currencies)\n    setSelectedCurrency(_currencies[0])\n\n  }\n  useEffect(() => {\n    loadCurrencyData()\n  }, [])\n\n\n  const handleStakeNow = async () => {\n    setLoading(true)\n\n\n    try {\n\n      const payload = {\n        \"toCurrency\": selectedCurrency.coinpaymentId,\n        \"walletAddress\": walletAddress,\n        \"usdAmount\": ramaAmount * config.PRICE\n      }\n\n      const resp = await axios.post(`${config.COINPAYMENT_SERVER}/createTxn`, payload)\n      console.log({ resp })\n      window.location.href = resp.data.data.checkout_url\n    } catch (err) {\n      console.error(\"handleStakeNow\", err)\n    }\n    setLoading(false)\n  }\n  const validate = (mode) => {\n    if (!inputCurrencyAmount) {\n      alert(\"Please Enter Amount\")\n      return\n    }\n\n    if (!Web3.utils.isAddress(walletAddress)) {\n      alert(\"Please Enter Valid Wallet Address\")\n      return\n    }\n\n    return true\n  }\n\n\n  return (\n    <div>\n      {props.show ? <><div\n        className=\"justify-center dark items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n      >\n        <div className=\"relative w-auto my-6 mx-auto max-w-3xl  \">\n\n          <div className=\"border-0 rounded-lg shadow-lg   bg-red relative flex flex-col w-full  outline-none focus:outline-none\" style={{ background: \"#2a2337\" }}>\n            <div className=\"relative p-6 flex-auto\">\n              <div >\n                <div className=\"\" style={{ color: \"#fff\" }}>\n                  <div className=\"grid grid-cols-2\" >\n                    <div>\n                      <button\n                        className=\"text-white bg-red font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none ease-linear transition-all duration-150\"\n                        style={{\n                          background: \"red\"\n                        }}\n                        type=\"button\"\n                        onClick={() => props.onPopupClose(false)}\n                      >\n                        Close\n                      </button>\n                    </div>\n                    <div>\n                      <h3 className=\"text-2xl\t font-bold\">Stake</h3>\n\n                    </div>\n\n                  </div>\n                  <hr className=\"mt-2\" />\n\n\n\n                </div>\n                <div className=\"\">\n                  {mode == 0 ? (\n                    <div id=\"formSubmit\">\n                      <div>\n                        <span className=\"text-lg text-white\t\">Select Currency  </span>\n\n                        {selectedCurrency ? <div class=\"grid grid-cols-6 gap-3 \">\n\n                          {currencies.map((item) => {\n                            return <OneCurrencyButton currency={item}\n                              isSelected={item.id === selectedCurrency.id}\n                              onSelect={(c) => {\n                                setSelectedCurrency(c)\n                              }} />\n\n                          })}\n                        </div> : null}\n\n\n                      </div>\n\n\n                      <div>\n\n                        <div className=\"flex  mt-4 align-middle border border-sky-500 p-2 border-r-2\">\n                          <div className=\"\">\n                            <OneCurrencyButton currency={selectedCurrency} />\n\n                          </div>\n                          <input\n\n                            style={{\n                              width: \"100% !important\"\n                            }}\n                            type=\"number\"\n                            min={0}\n                            value={inputCurrencyAmount}\n                            // ref={inputRef}\n                            onChange={(n) => {\n                              console.log(\"cdcxcxcxcx\", n.target.value);\n                              setInputCurrencyAmount(n.target.value);\n                            }}\n                            placeholder={`Enter ${selectedCurrency.symbol} Amount`}\n                            className=\"primary-input w-full\"\n                            required\n                          />\n                        </div>\n\n\n\n                        {/* <div\n                          onClick={() => {\n                            // onSelect(currency)\n                          }}\n                          style={{\n\n                            // width: \"100% !important\",\n                            background: \"white\",\n\n                          }} className={`  hoverable text-xs inline-flex items-center font-bold leading-sm uppercase px-3 py-1 rounded-full  text-gray-700 border mt-3`}\n                        >\n                          <img src={`/coins/RAMA.png`}\n                            className=\" mr-2\"\n\n                            height={30} width={30} />\n\n\n                          <p className={\"text-gray-700 \"}>\n                         1000  RAMA\n                          </p>\n\n\n                        </div> */}\n\n                      </div>\n\n                      {ramaAmount ? <div className=\"flex  mt-4 align-middle border border-sky-500 p-2 border-r-2\">\n                        <div className=\"\">\n                          <OneCurrencyButton currency={ramaCoin} />\n\n                        </div>\n                        <input\n\n                          disabled\n                          style={{\n                            width: \"100% !important\"\n                          }}\n                          // type=\"number\"\n                          min={0}\n                          // value={stakingInput}\n                          // ref={inputRef}\n                          onChange={(n) => {\n                            console.log(\"cdcxcxcxcx\", n.target.value);\n                            // setStakingInput(n.target.value);\n                          }}\n                          value={ramaAmount}\n                          className=\"primary-input w-full\"\n                          required\n                        />\n                      </div> : null}\n\n\n                      <div>\n\n                        <div className=\"flex  mt-4 align-middle border border-sky-500 p-2 border-r-2\">\n\n                          <input\n\n                            style={{\n                              width: \"100% !important\"\n                            }}\n                            type=\"text\"\n                            min={0}\n                            value={walletAddress}\n                            // ref={inputRef}\n                            onChange={(n) => {\n                              console.log(\"cdcxcxcxcx\", n.target.value);\n                              setWalletAddress(n.target.value);\n                            }}\n                            placeholder={`Enter RAMA Wallet Address`}\n                            className=\"primary-input w-full\"\n                            required\n                          />\n                        </div>\n\n\n\n\n                      </div>\n\n\n                      <button\n                        onClick={() => {\n                          // setStakingAmount(inputRef.current.value);\n                          const isValid = validate(0);\n                          if (isValid) {\n                            setMode(1);\n\n                          }\n                        }}\n                        className=\"secondary-btn next-btn\"\n                      >\n\n                        Next\n\n                      </button>\n                    </div>\n                  ) : (\n                    <div>\n                      <Table responsive>\n                        <thead >\n\n                        </thead>\n                        <tbody>\n\n\n                          <tr>\n                            <td>Buy Currency</td>\n                            <td className=\"tokenAmount\" id=\"stakeAmount\">\n                              <OneCurrencyButton currency={selectedCurrency} />\n                            </td>\n                          </tr>\n\n\n                          <tr>\n                            <td>Buy Currency Amount</td>\n                            <td className=\"tokenAmount\" id=\"stakeAmount\">\n                              {inputCurrencyAmount} {selectedCurrency.symbol}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>Stake Amount</td>\n                            <td className=\"tokenAmount\" id=\"stakeAmount\">\n                              {ramaAmount.toFixed(2)} RAMA\n                            </td>\n                          </tr>\n\n\n                          <tr>\n                            <td>Stake Amount (in $)</td>\n                            <td className=\"tokenAmount\" id=\"stakeAmount\">\n                              ${(ramaAmount * config.PRICE).toFixed(2)}\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td>Unlock Date</td>\n                            <td id=\"endDate\">\n                              {moment()\n                                .add(24, \"months\")\n                                .format(\"DD MMM YYYY\")}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>Total Reward</td>\n                            <td className=\"totalPrice\">\n                              {(ramaAmount * config.TOTAL_ROI / 100).toFixed(2)} RAMA\n\n                            </td>\n                          </tr>\n\n\n                          <tr>\n                            <td>Receiver Wallet Address</td>\n                            <td className=\"totalPrice\">\n                              <a href={`https://www.ramascan.com/address/${walletAddress}`}\n                                style={{ color: \"yellow\", textDecoration: \"underline\" }}\n                                target=\"_blank\">\n                                {walletAddress}\n                              </a>\n\n                            </td>\n                          </tr>\n                        </tbody>\n                      </Table>\n\n                      <div className=\"row\">\n                        <button\n                          style={{ color: \"#fff !important\" }}\n                          onClick={() => {\n                            handleStakeNow();\n                          }}\n                          className=\"secondary-btn next-btn\"\n                        >\n                          {isLoading ? (\n                            <div class=\"spinner-border\" role=\"status\">\n                              <span class=\"sr-only\">Loading...</span>\n                            </div>\n                          ) : (\n                            \"Stake Now\"\n                          )}\n                        </button>\n\n                        <button\n                          onClick={() => {\n                            setMode(0)\n                          }}\n                          className=\"primary-btn next-btn\" style={{ color: \"#fff\" }}\n                        >\n                          Back\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n      </>\n\n        : null}\n    </div>\n  );\n};\n\n\n\n\n\nfunction Home(props) {\n  const wallet = useWallet();\n  const [showPopUp, setShowPopUp] = useState(false);\n\n\n  const [depositData, setDepositData] = useState([]);\n\n  const [totalStakedAmount, setTotalStakedAmount] = useState(\"0\");\n  const [pendingReward, setPendingReward] = useState(\"0\")\n\n  const [stakingContract, setStakingContract] = useState()\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (stakingContract && wallet.account) {\n      loadData()\n\n      setInterval(async () => {\n        await loadData()\n      }, 5000)\n    }\n\n  }, [stakingContract, wallet.account])\n\n  useEffect(() => {\n    if (wallet.account) {\n      const _web3 = new Web3(window.ethereum?window.ethereum:config.RPC)\n      const contract = new _web3.eth.Contract(StakingABI, config.STAKING_ADDRESS);\n      setStakingContract(contract)\n    }\n\n  }, [wallet.account,window.ethereum])\n\n\n\n  const loadData = async () => {\n    console.log(\"LoadData\")\n    const walletAddress = wallet.account\n    const totalDepositLength = await stakingContract.methods.getDepositLength(walletAddress).call();\n    \n    console.log(\"totalDepositLength\",totalDepositLength)\n    const maxLockTime = await stakingContract.methods.MAX_LOCK_TIME().call()\n    const deposits = [];\n\n    console.log({ totalDepositLength })\n    let totalDeposit = 0;\n    let totalReward = 0;\n\n    for (let i = 0; i < totalDepositLength; i++) {\n      const deposit = await stakingContract.methods.stakingInfo(walletAddress, i).call()\n\n      console.log({deposit})\n      const _pendingReward = await stakingContract.methods.getPendingReward(walletAddress, i).call();\n      console.log({ _pendingReward })\n      const amount = Web3.utils.fromWei(deposit.amount);\n      const pendingReward = Web3.utils.fromWei(_pendingReward);\n      totalDeposit += Number(amount)\n      totalReward += Number(pendingReward)\n\n      deposits.push({\n        id: i,\n        timestamp: deposit.timestamp,\n        expireTimestamp: Number(deposit.timestamp) + Number(maxLockTime),\n        readableTime: moment(deposit.timestamp).format(\"DD MMM YYYY hh:mm a\"),\n        amount,\n        isWithdrawn: deposit.isWithdrawn,\n        pendingReward,\n\n      })\n    }\n\n    setDepositData(deposits)\n    setPendingReward(totalReward);\n    setTotalStakedAmount(totalDeposit)\n  }\n\n\n\n\n\n  useEffect(() => {\n    wallet.connect();\n    // loadTokenPrice()\n  }, []);\n\n\n\n\n\n\n\n\n\n  const handleWithdraw = async (id) => {\n    if (!wallet.account) {\n      toast.error(\"Please connect your wallet\");\n      return;\n    }\n    setLoading(true)\n\n    try {\n      await stakingContract.methods\n      .withdraw(id)\n      .send({ from: wallet.account });\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false)\n\n  };\n  return (\n    <div className=\"dashboard-container\" style={{ background: \"#2a2337\", }}>\n\n      <StakePopUp\n        show={showPopUp}\n        onPopupClose={() => {\n          setShowPopUp(false);\n        }}\n      />\n\n      <Header />\n\n      <main>\n        <div className=\"main-content\" style={{display:\"flex\",alignItems:'center',justifyContent:'center'}}>\n\n          <div className=\"dash-content\" style={{}}>\n            <div className=\"col-md-12 dash-wallet\" style={{maxWidth:\"\"}} >\n              <Flex\n              \n              >\n                {/* <div className=\"wallet-value circle\">\n                    <p>Total Balance</p>\n                    <h2 style={{ color: \"#8248e5\", fontWeight: \"bold\", fontSize: \"33px\" }} id=\"totalBalance\">{accountBalance}</h2>\n                    <p>RAMA</p>\n                  </div> */}\n                <Grid>\n                 \n                    <div>\n                      <Text>Annual APR</Text>\n                      <Heading>18%</Heading>\n                    </div>\n               \n\n                  <div>\n                    <Text>Rama Price </Text>\n                    <Heading>$0.12</Heading>\n                  </div>\n\n\n\n                  <div>\n                    <Text>Total Staked</Text>\n                    <Heading id=\"ystaked\">{Number(totalStakedAmount).toFixed(2)} RAMA</Heading>\n                  </div>\n\n\n\n\n                  <div >\n                    <Text>Pending Reward </Text>\n                    <Heading id=\"hreward\">{Number(pendingReward).toFixed(2)} RAMA</Heading>  \n                  </div>\n\n                </Grid>\n                <Flex1>\n\n                  <div className=\"col-md-6 col-6\">\n                    <div\n                      className=\"secondary-btn text-light font-bold\"\n                      onClick={() => {\n                        setShowPopUp(true);\n                      }}\n                    >\n                      Stake\n                    </div>\n                  </div>\n                  <div\n                    disabled\n                    className=\"col-md-6 col-6\"\n                    onClick={() => {\n                      handleWithdraw();\n                    }}\n                  >\n                    <div className=\"disabled-btn  font-bold disabled \">Unstake</div>\n                  </div>\n                  </Flex1>\n                  <div \n                  style={{width:\"100%\",height:\"2px\", background:\"#8248e5\",margin:'2rem 0 0 0'}}\n                />\n\n\n<div>\n    <Table responsive  style={{ color: \"#000\" }}>\n      <thead>\n        <tr>\n          <td colSpan={2}>ID</td>\n\n          <td colSpan={2}>Stake Date</td>\n          <td colSpan={2}>Staked Amount</td>\n          <td colSpan={2}>Pending Reward</td>\n          <td colSpan={2}>Unlock Time </td>\n          <td colSpan={2}>Action </td>\n\n        </tr>\n      </thead>\n      <tbody>\n\n\n\n        {depositData.map((e) => {\n          return <tr>\n            <td colSpan={2}>{e.id + 1}</td>\n\n            <td colSpan={2}>  {moment.unix(e.timestamp)\n              .format(\"DD MMM YYYY hh:mm a\")}</td>\n            <td colSpan={2}>{Number(e.amount).toFixed(2)} RAMA</td>\n\n            <td colSpan={2}>{Number(e.pendingReward).toFixed(2)} RAMA</td>\n\n            <td colSpan={2}>\n\n              {moment.unix(e.expireTimestamp)\n                .format(\"DD MMM YYYY hh:mm a\")}\n            </td>\n\n            <td colSpan={2}>\n\n              <button\n                disabled={(Date.now()/1000)< e.expireTimestamp || e.isWithdrawn}\n                style={{ color: \"#fff !important\" }}\n                onClick={() => {\n                  handleWithdraw(e.id);\n                }}\n                className={`secondary-btn ${(Date.now()/1000)< e.expireTimestamp || e.isWithdrawn?\"disabled-btn\":\"\"} `}\n              >\n                {isLoading ? (\n                  <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                ) : (\n                 e.isWithdrawn?\"Claimed\": \"Withdraw\"\n                )}\n              </button>\n            </td>\n          </tr>\n\n        })}\n\n\n\n\n      </tbody>\n    </Table>\n  </div>\n\n              </Flex>\n\n             \n            </div>\n          </div>\n        </div>\n      </main>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Home;\n","import { useEffect,useState  } from \"react\";\n\n\nconst Events = ()=>{\n\n\n    return <>\n        <h1>hi</h1>\n    \n    </>\n}\n\n\nexport default Events;","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"use-wallet\";\n\nimport config, { HALF_YEAR_APY, ANNUAL_APY } from \"../../config\";\nimport { Table } from \"reactstrap\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport web3 from \"web3\";\nimport { load } from \"js-yaml\";\nfunction ReferralDetails(props) {\n  const wallet = useWallet();\n  const [refData, setRefData] = useState([]);\n\n  useEffect(() => {\n    if (wallet.account && props.contracts && props.contracts.tokenContract) {\n      setInterval(() => {\n        loadBalance(wallet.account, props.contracts.tokenContract);\n      }, 5000);\n    }\n\n    console.log(\"props.contract.tokenContract\", props.contracts);\n  }, [wallet.account, props.contracts]);\n\n  useEffect(() => {\n    if (wallet.account && props.contracts && props.contracts.mlmContract) {\n      setInterval(() => {\n        loadMLMData(wallet.account, props.contracts.mlmContract);\n      }, 3000);\n    }\n  }, [wallet.account, props.contracts]);\n\n  const loadBalance = async (account, contract) => {\n    // console.log(\"loadBalance\", account, contract);\n\n    let tokenBalance = await contract.methods.balanceOf(account).call();\n\n    // setAccountBalance((tokenBalance / 1e18).toFixed(2));\n  };\n\n  const getBalance = () => {\n    if (wallet.balance != -1) {\n      return (wallet.balance / 1e18).toFixed(4);\n    } else {\n      return \"-\";\n    }\n  };\n\n\n  const getShortLink = (walletAddr) => {\n    \n\n    let link = walletAddr.substring(0, 4) + \"...\" + walletAddr.slice(-4);\n    return link;\n  };\n\n\n  const loadMLMData = async (account, contract) => {\n    contract\n      .getPastEvents(\n        \"SetReferral\",\n        {\n          // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n          fromBlock: 0,\n          toBlock: \"latest\",\n        },\n        function (error, events) {\n          let refEvent = [];\n          console.log(\"pointtttttttt\",events)\n\n          for (let event of events) {\n            let data = {\n              account: event.returnValues[\"0\"],\n              referral: event.returnValues[\"1\"],\n              amount: event.returnValues[\"2\"] / 1e18,\n            };\n\n            // if (data.referral === account) {\n            //   refEvent.push(data);\n            // }\n\n\n            if (data.account === account) {\n              refEvent.push(data);\n            }\n\n            \n\n            console.log(\"dataeventtt\", data);\n          }\n\n          setRefData(refEvent);\n\n          console.log(\"pointeve\", events);\n        }\n      )\n      .then(function (events) {\n        console.log(events); // same results as the optional callback above\n      });\n  };\n\n  const renderRefTable = () => {\n    let rows = [];\n\n    let i = 1;\n    for (let data of refData) {\n      rows.push(\n        <tr>\n          <th scope=\"row\">i</th>\n          <td><a href={\"https://bscscan.com/address/\"+data.account}>{getShortLink(data.account)}</a></td>\n          <td>{data.amount}</td>\n          <td>@fat</td>\n        </tr>\n      );\n\n      i = i + 1;\n    }\n\n    return rows;\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"navbar-toggle\">\n        <i className=\"fas fa-bars\" />\n      </div>\n\n      <div className=\"sidebar\">\n        <div className=\"logo\">\n          <a href=\"../index.html\">\n            <img src=\"./assets/images/ami logo.png\" alt=\"\" />\n          </a>\n        </div>\n        <nav>\n          <ul>\n            <li className=\"active\">\n              <a href=\"index.html\">\n                <i className=\"fas fa-columns\" />\n              </a>\n            </li>\n            <li>\n              <a href=\"leader.html\">\n                <i className=\"fas fa-chart-line\" />\n              </a>\n            </li>\n            <li>\n              <a href=\"user.html\">\n                <i className=\"fas fa-user\" />\n              </a>\n            </li>\n            <li className=\"rotate\">\n              <a href=\"settings.html\">\n                <i className=\"fas fa-cog\" />\n              </a>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"sidebar-footer\">\n          <li>\n            <i className=\"fas fa-sign-out-alt\" />\n          </li>\n        </div>\n      </div>\n\n      <main>\n        <div className=\"main-content\">\n          <div className=\"dash-header\">\n            <div style={{ maxWidth: \"450px\", width: \"100%\" }}>\n              <div className=\"dashboard-heading flex\">\n                <p style={{ margin: 0, padding: 0 }}>\n                  <i className=\"fas fa-columns\" />\n                </p>\n                <div className=\"name flex\">\n                  <div className=\"letters letters-0 ×\">D</div>\n                  <div className=\"letters letters-1 A\">A</div>\n                  <div className=\"letters letters-2 L\">S</div>\n                  <div className=\"letters letters-3 E\">H</div>\n                  <div className=\"letters letters-4 X\">B</div>\n                  <div className=\"letters letters-5 ×\">O</div>\n                  <div className=\"letters letters-6 B\">A</div>\n                  <div className=\"letters letters-7 R\">R</div>\n                  <div className=\"letters letters-8 O\">D</div>\n                </div>\n                <p />\n              </div>\n              <div className=\"dashboard-small-heading flex\">\n                <p>\n                  <i\n                    className=\"fas fa-wallet\"\n                    style={{ color: \"rgb(255,195,115)\" }}\n                  />\n                  BNB :{\" \"}\n                  <span id=\"myBal\">\n                    {getBalance()}\n                    <span></span>\n                  </span>\n                </p>\n                <p onclick=\"openContract()\" style={{ cursor: \"pointer\" }}>\n                  <span id=\"cAddress\">{wallet.account}</span>\n                </p>\n              </div>\n            </div>\n            <div className=\"flexcolumn\">\n              <div className=\"header-button flex\">\n                {/* <div className=\"primary-btn\"><span id=\"address\">\n                  Your Wallet Address</span>\n              </div> */}\n                <div\n                  className=\"secondary-btn\"\n                  onClick={() => {\n                    wallet.connect();\n                  }}\n                >\n                  {wallet.account ? \"Connected\" : \"Connect\"}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"dash-content mh-450\">\n            <div className=\"row mh-450\">\n              <div className=\"col-md-6\">\n                <div\n                  className=\"dash-wallet\"\n                  style={{ minHeight: \"570px !important\" }}\n                >\n                  <h3>Referral Details</h3>\n\n                  <Table color={\"white\"} striped>\n                    <thead color={\"white\"}>\n                      <tr>\n                        <th>#</th>\n                        <th color={\"white\"}>Wallet Address</th>\n                        <th>Date </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </div>\n\n              <div className=\"col-md-6\">\n                <div\n                  className=\"dash-wallet\"\n                  style={{ minHeight: \"570px !important\" }}\n                >\n                  <h3>Your Actions</h3>\n\n                  <Table color={\"white\"} striped>\n                    <thead color={\"white\"}>\n                      <tr>\n                        <th>#</th>\n                        <th color={\"white\"}>Wallet Address</th>\n                        <th>Date </th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderRefTable()}</tbody>\n                  </Table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default ReferralDetails;\n","import React,{useEffect,useState} from \"react\";\nimport TOKEN_ABI from \"../config/ABI/tokenABI.json\"\nimport MLM_ABI from \"../config/ABI/mlmABI.json\"\nimport EXCHANGE_ABI from \"../config/ABI/exchangeABI.json\"\n\nimport { useWallet } from \"use-wallet\";\nimport Web3 from \"web3\";\nimport config from \"../config\";\nconst BlockchainProvider = (props)=>{\n    const [web,setWeb3] = useState();\n\n    const [tokenContract,setTokenContract] = useState();\n    const [mlmContract,setMlmContract] = useState();\n    const [exchangeContract,setExchangeContract] = useState();\n\n    const wallet = useWallet()\n\n    useEffect(()=>{\n        initContractData();\n    },[])\n\n\n    const initContractData  =()=>{\n\n        const _web3 = new Web3(Web3.givenProvider \n            || \"http://localhost:8545\")\n\n\n        const _tokenContract = new _web3.eth.Contract(TOKEN_ABI,\n             config.TOKEN_ADDRESS)\n\n        const _exchangeContract = new _web3.eth.Contract(EXCHANGE_ABI,\n                config.EXCHANGE)\n\n        const _mlmContract = new _web3.eth.Contract(MLM_ABI,\n                config.MLM_ADDRESS)\n        setWeb3(_web3);\n\n        setTokenContract(_tokenContract);\n        setMlmContract(_mlmContract);\n        setExchangeContract(_exchangeContract);\n\n        props.onContractsLoaded({tokenContract:_tokenContract,\n            exchangeContract:_exchangeContract,\n            mlmContract: _mlmContract})\n\n        \n        // let _tokenContract = new  Web3\n    }\n\n\n    return <></>\n}\n\nexport default BlockchainProvider;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport ReferralDetails from \"./pages/ReferralDetails\";\n\nimport BlockchainProvider from \"./BlockchainProvider\";\nimport ICO from \"./pages/ICO\";\nfunction App() {\n  const [contracts, setContracts] = useState();\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const refLink = urlParams.get(\"masternode\");\n\n    if (refLink) {\n      localStorage.setItem(\"masternode\", refLink);\n    }\n  }, []);\n\n  return (\n    <>\n      <BlockchainProvider\n        onContractsLoaded={(contracts) => {\n          setContracts(contracts);\n        }}\n      />\n\n      <BrowserRouter>\n        <Switch>\n          {/* If the current URL is /about, this route is rendered\n            while the rest are ignored */}\n          <Route path=\"/\">\n            {/* <Home contracts={contracts} /> */}\n\n            <Home contracts={contracts} />\n          </Route>\n          {/* <Route path=\"/\">\n\n            <ICO contracts={contracts}  onlyBuy/>\n          </Route> */}\n          <Route path=\"/stats\">\n            <Events contracts={contracts} />\n          </Route>\n\n          <Route path=\"/referral\">\n            <ReferralDetails contracts={contracts} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {  UseWalletProvider } from 'use-wallet'\nimport BlockchainProvider from \"./BlockchainProvider\"\nimport config from \"./config\"\n// require('dotenv').config()\n\n\nimport { Provider } from 'react-redux'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <UseWalletProvider\n    chainId={config.CHAINID}\n   \n  >\n    <App />\n   \n  </UseWalletProvider>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}