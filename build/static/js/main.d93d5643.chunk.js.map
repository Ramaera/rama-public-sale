{"version":3,"sources":["config/index.js","components/Header.js","config/currencies.js","pages/Home/style/Style.js","pages/Home/index.js","pages/Events/index.js","pages/ReferralDetails/index.js","BlockchainProvider/index.js","App.js","reportWebVitals.js","index.js"],"names":["CHAINID","TOTAL_ROI","ANNUAL_ROI","STAKING_ADDRESS","RPC","PRICE","COINPAYMENT_SERVER","Header","wallet","useWallet","useState","connect","style","position","width","top","height","zIndex","background","className","display","flexFlow","margin","href","src","alt","window","screen","color","padding","cursor","float","onClick","account","substring","length","getAddress","id","name","symbol","coinpaymentId","price","Text","styled","p","Heading","h2","Flex","div","Grid","Flex1","OneCurrencyButton","currency","isSelected","onSelect","StakePopUp","props","currencies","setCurrencies","mode","setMode","isLoading","setLoading","selectedCurrency","setSelectedCurrency","ramaAmount","setRamaAmount","inputCurrencyAmount","setInputCurrencyAmount","walletAddress","setWalletAddress","ramaCoin","config","useEffect","currencyAmountInUSD","loadCurrencyData","a","axios","get","prices","data","_currencies","rawCurrencies","rawCurrency","ethereum","usd","tron","bitcoin","binancecoin","litecoin","push","console","log","handleStakeNow","payload","toCurrency","usdAmount","post","resp","location","checkout_url","error","show","type","onPopupClose","class","map","item","c","min","value","onChange","n","target","placeholder","required","disabled","Web3","utils","isAddress","alert","validate","Table","toFixed","moment","add","format","role","Home","showPopUp","setShowPopUp","depositData","setDepositData","totalStakedAmount","setTotalStakedAmount","pendingReward","setPendingReward","stakingContract","setStakingContract","loadData","setInterval","contract","eth","Contract","StakingABI","methods","getDepositLength","call","totalDepositLength","MAX_LOCK_TIME","maxLockTime","deposits","totalDeposit","totalReward","i","stakingInfo","deposit","getPendingReward","_pendingReward","amount","fromWei","Number","timestamp","expireTimestamp","readableTime","isWithdrawn","handleWithdraw","toast","withdraw","send","from","alignItems","justifyContent","maxWidth","responsive","colSpan","e","unix","Date","now","Events","ReferralDetails","refData","setRefData","contracts","tokenContract","loadBalance","mlmContract","loadMLMData","balanceOf","getPastEvents","fromBlock","toBlock","events","refEvent","event","returnValues","referral","then","balance","onclick","minHeight","striped","scope","walletAddr","rows","slice","renderRefTable","BlockchainProvider","setWeb3","setTokenContract","setMlmContract","setExchangeContract","initContractData","_web3","givenProvider","_tokenContract","TOKEN_ABI","TOKEN_ADDRESS","_exchangeContract","EXCHANGE_ABI","EXCHANGE","_mlmContract","MLM_ABI","MLM_ADDRESS","onContractsLoaded","exchangeContract","App","setContracts","refLink","URLSearchParams","search","localStorage","setItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","chainId","document","getElementById"],"mappings":"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","file":"static/js/main.d93d5643.chunk.js","sourcesContent":["export default {\n//     CHAINID:56,\n//     TOKEN_ADDRESS:\"0x421b9b6Ee30b17EC9D55BbBfFc1c9cD3cfD0c2f2\",\n//     MLM_ADDRESS:\"0x1D85B616C71587130068CEFB9aBE1E2f92F41B46\",\n//     DEFAULT_REF:\"0xFEFAc8Bc374460aca94A25E0A2E101B33b5B8e08\",\n//     BUSD:\"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n//     EXCHANGE:\"0xfEaf5c663585f77E04e51eEe0c9A8cA74C74b884\",\n//     HALF_YEAR_APY: 10,\n\n// // \n\n\n\n\n\n    CHAINID:1370,\n    TOTAL_ROI: 36,\n    ANNUAL_ROI: 18,\n    STAKING_ADDRESS:\"0xE8E4C68aa2De7E3462a48ADF06bc13d16407072D\",\n    RPC:\"https://blockchain.ramestta.com\",\n    PRICE: 0.12,\n    COINPAYMENT_SERVER:\"https://presale.ramaera.tk\"\n}","import { useState } from \"react\"\nimport { useWallet } from \"use-wallet\"\n\nconst Header = () => {\n  const wallet = useWallet()\n\n  useState(() => {\n    wallet.connect()\n  }, [])\n  const getAddress = (wallet) => {\n    return `${wallet.substring(0, 4)}....${wallet.substring(wallet.length - 4)}`\n  }\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        top: 0,\n        height: \"80px\",\n        zIndex: 9999,\n        background: \"black\",\n      }}\n    >\n      <div\n        className=\"main-content\"\n        style={{ display: \"flex\", flexFlow: \"row no-wrap\", width: \"100%\" }}\n      >\n        <div\n          className=\" logo\"\n          style={{ width: \"33%\", margin: \"auto\", display: \"block\" }}\n        >\n          <a href=\"#\">\n            <img\n              src=\"../logo.png\"\n              alt=\"\"\n              style={{ width: \"50px\", margin: \"auto\", display: \"block\" }}\n            />\n          </a>\n        </div>\n        {window.screen.width > 380 && (\n          <div\n            style={{\n              width: \"33%\",\n              margin: \"auto\",\n              display: \"block\",\n            }}\n          >\n            <ul className=\"list-none text-center flex lg:block \">\n              <li\n                style={{\n                  color: \"#fff\",\n                  display: \"inline-block\",\n                  padding: \"20px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <a\n                  href=\"http://ramestta.com/\"\n                  className=\"text-white cursor-pointer\"\n                >\n                  Home\n                </a>\n              </li>\n              <li\n                style={{\n                  color: \"#fff\",\n                  display: \"inline-block\",\n                  padding: \"20px\",\n                }}\n              >\n                <a href=\"/\" className=\"text-white cursor-pointer\">\n                  Staking\n                </a>\n              </li>\n              {/* <li\n              style={{\n                color: \"#fff\",\n                display: \"inline-block\",\n                padding: \"20px\",\n              }}\n            >\n              <a href=\"https://exchange.ramestta.com\" className=\"text-white cursor-pointer\">\n                Buy RAMA\n              </a>\n            </li> */}\n            </ul>\n          </div>\n        )}\n\n        <div\n          className=\"\"\n          style={{\n            float: \"right\",\n            width: \"33%\",\n            margin: \"auto\",\n            display: \"block\",\n          }}\n        >\n          <div className=\"header-button flex\" style={{ padding: \"12px\" }}>\n            {/* <div className=\"primary-btn\"><span id=\"address\">\n            Your Wallet Address</span>\n          </div> */}\n            <div\n              className=\"secondary-btn\"\n              onClick={() => {\n                wallet.connect()\n              }}\n            >\n              {wallet.account ? getAddress(wallet.account) : \"Connect\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","export default [\n    {\n        id:\"btc\",\n        name: \"Bitcoin\",\n        symbol: \"BTC\",\n        coinpaymentId:\"BTC\"\n    \n    },\n\n    {\n        id:\"eth\",\n        name: \"Ethereum\",\n        symbol: \"ETH\",\n        coinpaymentId:\"ETH\"\n\n    },\n\n\n    {\n        id:\"bnb\",\n\n        name: \"Binance Coin\",\n        symbol: \"BNB\",\n        coinpaymentId:\"BNB.BSC\"\n\n    },\n\n    {\n        id:\"trx\",\n        name: \"Tron\",\n        symbol: \"TRX\",\n        coinpaymentId:\"TRX\"\n\n    },\n    \n    {\n        id:\"busd\",\n        name: \"Binance USD\",\n\n        symbol: \"BUSD\",\n        price: 1,\n        coinpaymentId:\"BUSD.BEP20\"\n\n\n    },\n\n    {\n        id:\"ltc\",\n\n        name: \"Litcoin\",\n        symbol: \"LTC\",\n        coinpaymentId:\"LTC\"\n\n    },\n    {\n        id:\"usdt-erc20\",\n        name: \"USDT\",\n        symbol: \"USDT\",\n        price: 1,\n        coinpaymentId:\"USDT.ERC20\"\n\n\n    },\n    {\n        id:\"usdt-trc20\",\n\n        name: \"USDT\",\n        symbol: \"USDT\",\n        price: 1,\n        coinpaymentId:\"USDT.TRC20\"\n\n        \n\n    },\n    {\n        id:\"usdt-bep20\",\n\n        name: \"USDT\",\n        symbol: \"USDC\",\n        price: 1,\n        coinpaymentId:\"USDT.BEP20\"\n\n    },\n\n   \n   \n\n]","import styled from \"styled-components\";\n\nexport const Text = styled.p`\n    color: rgb(0, 0, 0);\n    font-weight: 700;\n    text-align: center;\n`\nexport const Heading = styled.h2`\n    color: rgb(130, 72, 229);\n    font-weight: bold;\n    font-size: 22px;\n    text-align: center;\n`\nexport const Flex = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n   // justify-content: space-between;\n    width: 100%;\n    min-height: 576px;\n    padding: 2rem 0;\n`\nexport const Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(47%, 1fr));\n    grid-gap: 2rem 0.5rem;\n   width: 100%;\n   \n`\nexport const Flex1 = styled.div`\n    display: flex;\n   // flex-direction: columm;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    margin: 2rem  0 0 0;\n`","import React, { useEffect, useRef, useState } from \"react\"\nimport { useWallet } from \"use-wallet\"\n\nimport config from \"../../config\"\nimport moment from \"moment\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport web3 from \"web3\"\nimport Header from \"../../components/Header\"\nimport { Table } from \"reactstrap\"\nimport rawCurrencies from \"../../config/currencies\"\nimport axios from \"axios\"\nimport Web3 from \"web3\"\nimport Coinpayments from \"coinpayments\"\nimport StakingABI from \"../../config/ABI/StakingABI.json\"\nimport { Text, Heading, Flex, Grid, Flex1 } from \"./style/Style\"\n\nconst OneCurrencyButton = ({ currency, isSelected, onSelect }) => {\n  return (\n    <div\n      onClick={() => {\n        if (onSelect) {\n          onSelect(currency)\n        }\n      }}\n      style={{\n        width: \"100% !important\",\n        background: isSelected ? \"#2a223761\" : \"white\",\n      }}\n      className={`  hoverable text-xs inline-flex items-center font-bold leading-sm uppercase px-3 py-1 rounded-full  text-gray-700 border w-full lg:flex-row flex-col`}\n    >\n      <img\n        src={`/coins/${currency.id}.png`}\n        className=\" lg:mr-2 \"\n        height={30}\n        width={30}\n      />\n\n      <p className={isSelected ? \"text-white\" : \"text-gray-700 \"}>\n        {currency.symbol}\n      </p>\n    </div>\n  )\n}\n\nconst StakePopUp = (props) => {\n  const [currencies, setCurrencies] = useState([])\n  const [mode, setMode] = useState(0)\n  const [isLoading, setLoading] = useState(false)\n  const [selectedCurrency, setSelectedCurrency] = useState()\n  const [ramaAmount, setRamaAmount] = useState(0)\n  const [inputCurrencyAmount, setInputCurrencyAmount] = useState(0)\n  const [walletAddress, setWalletAddress] = useState(\"\")\n  const ramaCoin = {\n    id: \"rama\",\n    name: \"Ramessta\",\n    symbol: \"RAMA\",\n    price: config.PRICE,\n  }\n\n  useEffect(() => {\n    if (selectedCurrency) {\n      const currencyAmountInUSD = selectedCurrency.price * inputCurrencyAmount\n      const usdtToRama = currencyAmountInUSD / config.PRICE\n      setRamaAmount(usdtToRama)\n    }\n  }, [selectedCurrency, inputCurrencyAmount])\n  const loadCurrencyData = async () => {\n    let prices = await axios.get(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctron%2Cbinancecoin%2Clitecoin&vs_currencies=usd\"\n    )\n    prices = prices.data\n\n    const _currencies = []\n\n    for (let rawCurrency of rawCurrencies) {\n      let price = rawCurrency.price\n      if (rawCurrency.id === \"eth\") {\n        price = prices.ethereum.usd\n      } else if (rawCurrency.id === \"trx\") {\n        price = prices.tron.usd\n      } else if (rawCurrency.id === \"btc\") {\n        price = prices.bitcoin.usd\n      } else if (rawCurrency.id === \"bnb\") {\n        price = prices.binancecoin.usd\n      } else if (rawCurrency.id === \"ltc\") {\n        price = prices.litecoin.usd\n      }\n\n      _currencies.push({ ...rawCurrency, price })\n    }\n\n    console.log({ _currencies })\n    setCurrencies(_currencies)\n    setSelectedCurrency(_currencies[0])\n  }\n  useEffect(() => {\n    loadCurrencyData()\n  }, [])\n\n  const handleStakeNow = async () => {\n    setLoading(true)\n\n    try {\n      const payload = {\n        toCurrency: selectedCurrency.coinpaymentId,\n        walletAddress: walletAddress,\n        usdAmount: ramaAmount * config.PRICE,\n      }\n\n      const resp = await axios.post(\n        `${config.COINPAYMENT_SERVER}/createTxn`,\n        payload\n      )\n      console.log({ resp })\n      window.location.href = resp.data.data.checkout_url\n    } catch (err) {\n      console.error(\"handleStakeNow\", err)\n    }\n    setLoading(false)\n  }\n  const validate = (mode) => {\n    if (!inputCurrencyAmount) {\n      alert(\"Please Enter Amount\")\n      return\n    }\n\n    if (!Web3.utils.isAddress(walletAddress)) {\n      alert(\"Please Enter Valid Wallet Address\")\n      return\n    }\n\n    return true\n  }\n\n  return (\n    <div>\n      {props.show ? (\n        <>\n          <div className=\"justify-center dark items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl  \">\n              <div\n                className=\"border-0 rounded-lg shadow-lg   bg-red relative flex flex-col w-full  outline-none focus:outline-none\"\n                style={{ background: \"#2a2337\" }}\n              >\n                <div className=\"relative p-6 flex-auto\">\n                  <div>\n                    <div className=\"\" style={{ color: \"#fff\" }}>\n                      <div className=\"grid grid-cols-2\">\n                        <div>\n                          <button\n                            className=\"text-white bg-red font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none ease-linear transition-all duration-150\"\n                            style={{\n                              background: \"red\",\n                            }}\n                            type=\"button\"\n                            onClick={() => props.onPopupClose(false)}\n                          >\n                            Close\n                          </button>\n                        </div>\n                        <div>\n                          <h3 className=\"text-2xl\t font-bold\">Stake</h3>\n                        </div>\n                      </div>\n                      <hr className=\"mt-2\" />\n                    </div>\n                    <div className=\"\">\n                      {mode == 0 ? (\n                        <div id=\"formSubmit\">\n                          <div>\n                            <span className=\"text-lg text-white\t\">\n                              Select Currency{\" \"}\n                            </span>\n\n                            {selectedCurrency ? (\n                              <div class=\"grid grid-cols-6 gap-3 \">\n                                {currencies.map((item) => {\n                                  return (\n                                    <OneCurrencyButton\n                                      currency={item}\n                                      isSelected={\n                                        item.id === selectedCurrency.id\n                                      }\n                                      onSelect={(c) => {\n                                        setSelectedCurrency(c)\n                                      }}\n                                    />\n                                  )\n                                })}\n                              </div>\n                            ) : null}\n                          </div>\n\n                          <div>\n                            <div className=\"flex  mt-4 align-middle border border-sky-500 p-2 border-r-2\">\n                              <div className=\"\">\n                                <OneCurrencyButton\n                                  currency={selectedCurrency}\n                                />\n                              </div>\n                              <input\n                                style={{\n                                  width: \"100% !important\",\n                                }}\n                                type=\"number\"\n                                min={0}\n                                value={inputCurrencyAmount}\n                                // ref={inputRef}\n                                onChange={(n) => {\n                                  console.log(\"cdcxcxcxcx\", n.target.value)\n                                  setInputCurrencyAmount(n.target.value)\n                                }}\n                                placeholder={`Enter ${selectedCurrency.symbol} Amount`}\n                                className=\"primary-input w-full\"\n                                required\n                              />\n                            </div>\n\n                            {/* <div\n                          onClick={() => {\n                            // onSelect(currency)\n                          }}\n                          style={{\n\n                            // width: \"100% !important\",\n                            background: \"white\",\n\n                          }} className={`  hoverable text-xs inline-flex items-center font-bold leading-sm uppercase px-3 py-1 rounded-full  text-gray-700 border mt-3`}\n                        >\n                          <img src={`/coins/RAMA.png`}\n                            className=\" mr-2\"\n\n                            height={30} width={30} />\n\n\n                          <p className={\"text-gray-700 \"}>\n                         1000  RAMA\n                          </p>\n\n\n                        </div> */}\n                          </div>\n\n                          {ramaAmount ? (\n                            <div className=\"flex  mt-4 align-middle border border-sky-500 p-2 border-r-2\">\n                              <div className=\"\">\n                                <OneCurrencyButton currency={ramaCoin} />\n                              </div>\n                              <input\n                                disabled\n                                style={{\n                                  width: \"100% !important\",\n                                }}\n                                // type=\"number\"\n                                min={0}\n                                // value={stakingInput}\n                                // ref={inputRef}\n                                onChange={(n) => {\n                                  console.log(\"cdcxcxcxcx\", n.target.value)\n                                  // setStakingInput(n.target.value);\n                                }}\n                                value={ramaAmount}\n                                className=\"primary-input w-full\"\n                                required\n                              />\n                            </div>\n                          ) : null}\n\n                          <div>\n                            <div className=\"flex  mt-4 align-middle border border-sky-500 p-2 border-r-2\">\n                              <input\n                                style={{\n                                  width: \"100% !important\",\n                                }}\n                                type=\"text\"\n                                min={0}\n                                value={walletAddress}\n                                // ref={inputRef}\n                                onChange={(n) => {\n                                  console.log(\"cdcxcxcxcx\", n.target.value)\n                                  setWalletAddress(n.target.value)\n                                }}\n                                placeholder={`Enter RAMA Wallet Address`}\n                                className=\"primary-input w-full\"\n                                required\n                              />\n                            </div>\n                          </div>\n\n                          <button\n                            onClick={() => {\n                              // setStakingAmount(inputRef.current.value);\n                              const isValid = validate(0)\n                              if (isValid) {\n                                setMode(1)\n                              }\n                            }}\n                            className=\"secondary-btn next-btn\"\n                          >\n                            Next\n                          </button>\n                        </div>\n                      ) : (\n                        <div>\n                          <Table>\n                            <thead></thead>\n                            <tbody>\n                              <tr>\n                                <td>Buy Currency</td>\n                                <td className=\"tokenAmount\" id=\"stakeAmount\">\n                                  <OneCurrencyButton\n                                    currency={selectedCurrency}\n                                  />\n                                </td>\n                              </tr>\n\n                              <tr>\n                                <td>Buy Currency Amount</td>\n                                <td className=\"tokenAmount\" id=\"stakeAmount\">\n                                  {inputCurrencyAmount}{\" \"}\n                                  {selectedCurrency.symbol}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>Stake Amount</td>\n                                <td className=\"tokenAmount\" id=\"stakeAmount\">\n                                  {ramaAmount.toFixed(2)} RAMA\n                                </td>\n                              </tr>\n\n                              <tr>\n                                <td>Stake Amount (in $)</td>\n                                <td className=\"tokenAmount\" id=\"stakeAmount\">\n                                  ${(ramaAmount * config.PRICE).toFixed(2)}\n                                </td>\n                              </tr>\n\n                              <tr>\n                                <td>Unlock Date</td>\n                                <td id=\"endDate\">\n                                  {moment()\n                                    .add(24, \"months\")\n                                    .format(\"DD MMM YYYY\")}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>Total Reward</td>\n                                <td className=\"totalPrice\">\n                                  {(\n                                    (ramaAmount * config.TOTAL_ROI) /\n                                    100\n                                  ).toFixed(2)}{\" \"}\n                                  RAMA\n                                </td>\n                              </tr>\n\n                              <tr>\n                                <td>Receiver Wallet Address</td>\n                                <td className=\"totalPrice\">\n                                  <a\n                                    href={`https://www.ramascan.com/address/${walletAddress}`}\n                                    className=\"w-2 truncate text-yellow-300 underline\"\n                                    target=\"_blank\"\n                                  >\n                                    {`${walletAddress.substring(\n                                      0,\n                                      5\n                                    )}.....${walletAddress.substring(\n                                      walletAddress.length - 5,\n                                      walletAddress.length\n                                    )}`}\n                                  </a>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </Table>\n\n                          <div className=\"row\">\n                            <button\n                              style={{ color: \"#fff !important\" }}\n                              onClick={() => {\n                                handleStakeNow()\n                              }}\n                              className=\"secondary-btn next-btn\"\n                            >\n                              {isLoading ? (\n                                <div class=\"spinner-border\" role=\"status\">\n                                  <span class=\"sr-only\">Loading...</span>\n                                </div>\n                              ) : (\n                                \"Stake Now\"\n                              )}\n                            </button>\n\n                            <button\n                              onClick={() => {\n                                setMode(0)\n                              }}\n                              className=\"primary-btn next-btn\"\n                              style={{ color: \"#fff\" }}\n                            >\n                              Back\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nfunction Home(props) {\n  const wallet = useWallet()\n  const [showPopUp, setShowPopUp] = useState(false)\n\n  const [depositData, setDepositData] = useState([])\n\n  const [totalStakedAmount, setTotalStakedAmount] = useState(\"0\")\n  const [pendingReward, setPendingReward] = useState(\"0\")\n\n  const [stakingContract, setStakingContract] = useState()\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (stakingContract && wallet.account) {\n      loadData()\n\n      setInterval(async () => {\n        await loadData()\n      }, 5000)\n    }\n  }, [stakingContract, wallet.account])\n\n  useEffect(() => {\n    if (wallet.account) {\n      const _web3 = new Web3(window.ethereum ? window.ethereum : config.RPC)\n      const contract = new _web3.eth.Contract(\n        StakingABI,\n        config.STAKING_ADDRESS\n      )\n      setStakingContract(contract)\n    }\n  }, [wallet.account, window.ethereum])\n\n  const loadData = async () => {\n    const walletAddress = wallet.account\n    const totalDepositLength = await stakingContract.methods\n      .getDepositLength(walletAddress)\n      .call()\n\n    const maxLockTime = await stakingContract.methods.MAX_LOCK_TIME().call()\n    const deposits = []\n\n    let totalDeposit = 0\n    let totalReward = 0\n\n    for (let i = 0; i < totalDepositLength; i++) {\n      const deposit = await stakingContract.methods\n        .stakingInfo(walletAddress, i)\n        .call()\n\n      const _pendingReward = await stakingContract.methods\n        .getPendingReward(walletAddress, i)\n        .call()\n      const amount = Web3.utils.fromWei(deposit.amount)\n      const pendingReward = Web3.utils.fromWei(_pendingReward)\n      totalDeposit += Number(amount)\n      totalReward += Number(pendingReward)\n\n      deposits.push({\n        id: i,\n        timestamp: deposit.timestamp,\n        expireTimestamp: Number(deposit.timestamp) + Number(maxLockTime),\n        readableTime: moment(deposit.timestamp).format(\"DD MMM YYYY hh:mm a\"),\n        amount,\n        isWithdrawn: deposit.isWithdrawn,\n        pendingReward,\n      })\n    }\n\n    setDepositData(deposits)\n    setPendingReward(totalReward)\n    setTotalStakedAmount(totalDeposit)\n  }\n\n  useEffect(() => {\n    wallet.connect()\n    // loadTokenPrice()\n  }, [])\n\n  const handleWithdraw = async (id) => {\n    if (!wallet.account) {\n      toast.error(\"Please connect your wallet\")\n      return\n    }\n    setLoading(true)\n\n    try {\n      await stakingContract.methods.withdraw(id).send({ from: wallet.account })\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false)\n  }\n  return (\n    <div className=\"dashboard-container\" style={{ background: \"#2a2337\" }}>\n      <StakePopUp\n        show={showPopUp}\n        onPopupClose={() => {\n          setShowPopUp(false)\n        }}\n      />\n\n      <Header />\n\n      <main>\n        <div\n          className=\"main-content\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div className=\"dash-content w-5/6 lg:w-3/5 \" style={{}}>\n            <div className=\"col-md-12 dash-wallet\" style={{ maxWidth: \"\" }}>\n              <Flex>\n                {/* <div className=\"wallet-value circle\">\n                    <p>Total Balance</p>\n                    <h2 style={{ color: \"#8248e5\", fontWeight: \"bold\", fontSize: \"33px\" }} id=\"totalBalance\">{accountBalance}</h2>\n                    <p>RAMA</p>\n                  </div> */}\n                <Grid>\n                  <div>\n                    <Text>Annual APR</Text>\n                    <Heading>18%</Heading>\n                  </div>\n\n                  <div>\n                    <Text>Rama Price </Text>\n                    <Heading>$0.12</Heading>\n                  </div>\n\n                  <div>\n                    <Text>Total Staked</Text>\n                    <Heading id=\"ystaked\">\n                      {Number(totalStakedAmount).toFixed(2)} RAMA\n                    </Heading>\n                  </div>\n\n                  <div>\n                    <Text>Pending Reward </Text>\n                    <Heading id=\"hreward\">\n                      {Number(pendingReward).toFixed(2)} RAMA\n                    </Heading>\n                  </div>\n                </Grid>\n                <Flex1>\n                  <div className=\"col-md-6 col-6\">\n                    <div\n                      className=\"secondary-btn text-light font-bold\"\n                      onClick={() => {\n                        setShowPopUp(true)\n                      }}\n                    >\n                      Stake\n                    </div>\n                  </div>\n                  <div\n                    disabled\n                    className=\"col-md-6 col-6\"\n                    onClick={() => {\n                      handleWithdraw()\n                    }}\n                  >\n                    <div className=\"disabled-btn  font-bold disabled \">\n                      Unstake\n                    </div>\n                  </div>\n                </Flex1>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"2px\",\n                    background: \"#8248e5\",\n                    margin: \"auto 0 0 0\",\n                  }}\n                />\n\n                <div>\n                  <Table responsive style={{ color: \"#000\" }}>\n                    <thead>\n                      <tr>\n                        <div className=\"flex flex-col lg:flex-row px-2\">\n                          <div>\n                            <td className=\" w-16 lg:w-32\" colSpan={2}>\n                              ID\n                            </td>\n                            <td className=\" w-16 lg:w-32\" colSpan={2}>\n                              Stake Date\n                            </td>\n                            <td className=\" w-16 lg:w-32\" colSpan={2}>\n                              Staked Amount\n                            </td>\n                          </div>\n                          <div>\n                            <td className=\" w-16 lg:w-32\" colSpan={2}>\n                              Pending Reward\n                            </td>\n                            <td className=\" w-16 lg:w-32\" colSpan={2}>\n                              Unlock Time{\" \"}\n                            </td>\n                            <td className=\" w-16 lg:w-32\" colSpan={2}>\n                              Action{\" \"}\n                            </td>\n                          </div>\n                        </div>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {depositData.map((e) => {\n                        return (\n                          <tr>\n                            <td colSpan={2}>{e.id + 1}</td>\n\n                            <td colSpan={2}>\n                              {\" \"}\n                              {moment\n                                .unix(e.timestamp)\n                                .format(\"DD MMM YYYY hh:mm a\")}\n                            </td>\n                            <td colSpan={2}>\n                              {Number(e.amount).toFixed(2)} RAMA\n                            </td>\n\n                            <td colSpan={2}>\n                              {Number(e.pendingReward).toFixed(2)} RAMA\n                            </td>\n\n                            <td colSpan={2}>\n                              {moment\n                                .unix(e.expireTimestamp)\n                                .format(\"DD MMM YYYY hh:mm a\")}\n                            </td>\n\n                            <td colSpan={2}>\n                              <button\n                                disabled={\n                                  Date.now() / 1000 < e.expireTimestamp ||\n                                  e.isWithdrawn\n                                }\n                                style={{ color: \"#fff !important\" }}\n                                onClick={() => {\n                                  handleWithdraw(e.id)\n                                }}\n                                className={`secondary-btn ${\n                                  Date.now() / 1000 < e.expireTimestamp ||\n                                  e.isWithdrawn\n                                    ? \"disabled-btn\"\n                                    : \"\"\n                                } `}\n                              >\n                                {isLoading ? (\n                                  <div class=\"spinner-border\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                  </div>\n                                ) : e.isWithdrawn ? (\n                                  \"Claimed\"\n                                ) : (\n                                  \"Withdraw\"\n                                )}\n                              </button>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </Table>\n                </div>\n              </Flex>\n            </div>\n          </div>\n        </div>\n      </main>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default Home\n","import { useEffect,useState  } from \"react\";\n\n\nconst Events = ()=>{\n\n\n    return <>\n        <h1>hi</h1>\n    \n    </>\n}\n\n\nexport default Events;","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"use-wallet\";\n\nimport config, { HALF_YEAR_APY, ANNUAL_APY } from \"../../config\";\nimport { Table } from \"reactstrap\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport web3 from \"web3\";\nimport { load } from \"js-yaml\";\nfunction ReferralDetails(props) {\n  const wallet = useWallet();\n  const [refData, setRefData] = useState([]);\n\n  useEffect(() => {\n    if (wallet.account && props.contracts && props.contracts.tokenContract) {\n      setInterval(() => {\n        loadBalance(wallet.account, props.contracts.tokenContract);\n      }, 5000);\n    }\n\n    console.log(\"props.contract.tokenContract\", props.contracts);\n  }, [wallet.account, props.contracts]);\n\n  useEffect(() => {\n    if (wallet.account && props.contracts && props.contracts.mlmContract) {\n      setInterval(() => {\n        loadMLMData(wallet.account, props.contracts.mlmContract);\n      }, 3000);\n    }\n  }, [wallet.account, props.contracts]);\n\n  const loadBalance = async (account, contract) => {\n    // console.log(\"loadBalance\", account, contract);\n\n    let tokenBalance = await contract.methods.balanceOf(account).call();\n\n    // setAccountBalance((tokenBalance / 1e18).toFixed(2));\n  };\n\n  const getBalance = () => {\n    if (wallet.balance != -1) {\n      return (wallet.balance / 1e18).toFixed(4);\n    } else {\n      return \"-\";\n    }\n  };\n\n\n  const getShortLink = (walletAddr) => {\n    \n\n    let link = walletAddr.substring(0, 4) + \"...\" + walletAddr.slice(-4);\n    return link;\n  };\n\n\n  const loadMLMData = async (account, contract) => {\n    contract\n      .getPastEvents(\n        \"SetReferral\",\n        {\n          // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n          fromBlock: 0,\n          toBlock: \"latest\",\n        },\n        function (error, events) {\n          let refEvent = [];\n          console.log(\"pointtttttttt\",events)\n\n          for (let event of events) {\n            let data = {\n              account: event.returnValues[\"0\"],\n              referral: event.returnValues[\"1\"],\n              amount: event.returnValues[\"2\"] / 1e18,\n            };\n\n            // if (data.referral === account) {\n            //   refEvent.push(data);\n            // }\n\n\n            if (data.account === account) {\n              refEvent.push(data);\n            }\n\n            \n\n            console.log(\"dataeventtt\", data);\n          }\n\n          setRefData(refEvent);\n\n          console.log(\"pointeve\", events);\n        }\n      )\n      .then(function (events) {\n        console.log(events); // same results as the optional callback above\n      });\n  };\n\n  const renderRefTable = () => {\n    let rows = [];\n\n    let i = 1;\n    for (let data of refData) {\n      rows.push(\n        <tr>\n          <th scope=\"row\">i</th>\n          <td><a href={\"https://bscscan.com/address/\"+data.account}>{getShortLink(data.account)}</a></td>\n          <td>{data.amount}</td>\n          <td>@fat</td>\n        </tr>\n      );\n\n      i = i + 1;\n    }\n\n    return rows;\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"navbar-toggle\">\n        <i className=\"fas fa-bars\" />\n      </div>\n\n      <div className=\"sidebar\">\n        <div className=\"logo\">\n          <a href=\"../index.html\">\n            <img src=\"./assets/images/ami logo.png\" alt=\"\" />\n          </a>\n        </div>\n        <nav>\n          <ul>\n            <li className=\"active\">\n              <a href=\"index.html\">\n                <i className=\"fas fa-columns\" />\n              </a>\n            </li>\n            <li>\n              <a href=\"leader.html\">\n                <i className=\"fas fa-chart-line\" />\n              </a>\n            </li>\n            <li>\n              <a href=\"user.html\">\n                <i className=\"fas fa-user\" />\n              </a>\n            </li>\n            <li className=\"rotate\">\n              <a href=\"settings.html\">\n                <i className=\"fas fa-cog\" />\n              </a>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"sidebar-footer\">\n          <li>\n            <i className=\"fas fa-sign-out-alt\" />\n          </li>\n        </div>\n      </div>\n\n      <main>\n        <div className=\"main-content\">\n          <div className=\"dash-header\">\n            <div style={{ maxWidth: \"450px\", width: \"100%\" }}>\n              <div className=\"dashboard-heading flex\">\n                <p style={{ margin: 0, padding: 0 }}>\n                  <i className=\"fas fa-columns\" />\n                </p>\n                <div className=\"name flex\">\n                  <div className=\"letters letters-0 ×\">D</div>\n                  <div className=\"letters letters-1 A\">A</div>\n                  <div className=\"letters letters-2 L\">S</div>\n                  <div className=\"letters letters-3 E\">H</div>\n                  <div className=\"letters letters-4 X\">B</div>\n                  <div className=\"letters letters-5 ×\">O</div>\n                  <div className=\"letters letters-6 B\">A</div>\n                  <div className=\"letters letters-7 R\">R</div>\n                  <div className=\"letters letters-8 O\">D</div>\n                </div>\n                <p />\n              </div>\n              <div className=\"dashboard-small-heading flex\">\n                <p>\n                  <i\n                    className=\"fas fa-wallet\"\n                    style={{ color: \"rgb(255,195,115)\" }}\n                  />\n                  BNB :{\" \"}\n                  <span id=\"myBal\">\n                    {getBalance()}\n                    <span></span>\n                  </span>\n                </p>\n                <p onclick=\"openContract()\" style={{ cursor: \"pointer\" }}>\n                  <span id=\"cAddress\">{wallet.account}</span>\n                </p>\n              </div>\n            </div>\n            <div className=\"flexcolumn\">\n              <div className=\"header-button flex\">\n                {/* <div className=\"primary-btn\"><span id=\"address\">\n                  Your Wallet Address</span>\n              </div> */}\n                <div\n                  className=\"secondary-btn\"\n                  onClick={() => {\n                    wallet.connect();\n                  }}\n                >\n                  {wallet.account ? \"Connected\" : \"Connect\"}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"dash-content mh-450\">\n            <div className=\"row mh-450\">\n              <div className=\"col-md-6\">\n                <div\n                  className=\"dash-wallet\"\n                  style={{ minHeight: \"570px !important\" }}\n                >\n                  <h3>Referral Details</h3>\n\n                  <Table color={\"white\"} striped>\n                    <thead color={\"white\"}>\n                      <tr>\n                        <th>#</th>\n                        <th color={\"white\"}>Wallet Address</th>\n                        <th>Date </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </div>\n\n              <div className=\"col-md-6\">\n                <div\n                  className=\"dash-wallet\"\n                  style={{ minHeight: \"570px !important\" }}\n                >\n                  <h3>Your Actions</h3>\n\n                  <Table color={\"white\"} striped>\n                    <thead color={\"white\"}>\n                      <tr>\n                        <th>#</th>\n                        <th color={\"white\"}>Wallet Address</th>\n                        <th>Date </th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderRefTable()}</tbody>\n                  </Table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default ReferralDetails;\n","import React,{useEffect,useState} from \"react\";\nimport TOKEN_ABI from \"../config/ABI/tokenABI.json\"\nimport MLM_ABI from \"../config/ABI/mlmABI.json\"\nimport EXCHANGE_ABI from \"../config/ABI/exchangeABI.json\"\n\nimport { useWallet } from \"use-wallet\";\nimport Web3 from \"web3\";\nimport config from \"../config\";\nconst BlockchainProvider = (props)=>{\n    const [web,setWeb3] = useState();\n\n    const [tokenContract,setTokenContract] = useState();\n    const [mlmContract,setMlmContract] = useState();\n    const [exchangeContract,setExchangeContract] = useState();\n\n    const wallet = useWallet()\n\n    useEffect(()=>{\n        initContractData();\n    },[])\n\n\n    const initContractData  =()=>{\n\n        const _web3 = new Web3(Web3.givenProvider \n            || \"http://localhost:8545\")\n\n\n        const _tokenContract = new _web3.eth.Contract(TOKEN_ABI,\n             config.TOKEN_ADDRESS)\n\n        const _exchangeContract = new _web3.eth.Contract(EXCHANGE_ABI,\n                config.EXCHANGE)\n\n        const _mlmContract = new _web3.eth.Contract(MLM_ABI,\n                config.MLM_ADDRESS)\n        setWeb3(_web3);\n\n        setTokenContract(_tokenContract);\n        setMlmContract(_mlmContract);\n        setExchangeContract(_exchangeContract);\n\n        props.onContractsLoaded({tokenContract:_tokenContract,\n            exchangeContract:_exchangeContract,\n            mlmContract: _mlmContract})\n\n        \n        // let _tokenContract = new  Web3\n    }\n\n\n    return <></>\n}\n\nexport default BlockchainProvider;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport ReferralDetails from \"./pages/ReferralDetails\";\n\nimport BlockchainProvider from \"./BlockchainProvider\";\nimport ICO from \"./pages/ICO\";\nfunction App() {\n  const [contracts, setContracts] = useState();\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const refLink = urlParams.get(\"masternode\");\n\n    if (refLink) {\n      localStorage.setItem(\"masternode\", refLink);\n    }\n  }, []);\n\n  return (\n    <>\n      <BlockchainProvider\n        onContractsLoaded={(contracts) => {\n          setContracts(contracts);\n        }}\n      />\n\n      <BrowserRouter>\n        <Switch>\n          {/* If the current URL is /about, this route is rendered\n            while the rest are ignored */}\n          <Route path=\"/\">\n            {/* <Home contracts={contracts} /> */}\n\n            <Home contracts={contracts} />\n          </Route>\n          {/* <Route path=\"/\">\n\n            <ICO contracts={contracts}  onlyBuy/>\n          </Route> */}\n          <Route path=\"/stats\">\n            <Events contracts={contracts} />\n          </Route>\n\n          <Route path=\"/referral\">\n            <ReferralDetails contracts={contracts} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {  UseWalletProvider } from 'use-wallet'\nimport BlockchainProvider from \"./BlockchainProvider\"\nimport config from \"./config\"\n// require('dotenv').config()\n\n\nimport { Provider } from 'react-redux'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <UseWalletProvider\n    chainId={config.CHAINID}\n   \n  >\n    <App />\n   \n  </UseWalletProvider>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}